{"version":3,"sources":["../../src/server/index.js"],"names":["require","config","app","APP_PORT","process","env","mongodb","MongoClient","url","MONGO_URI","use","express","static","path","resolve","__dirname","get","req","res","console","log","method","toUpperCase","connect","useUnifiedTopology","err","client","db","Banks","collection","find","toArray","e","banks","send","Terminals","terminals","listen"],"mappings":";;AAUA;;AACA;;;;AAHAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAKA,MAAMC,GAAG,GAAG,uBAAZ;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaC,OAAO,CAACC,GAA3B;;AAEA,MAAMC,OAAO,GAAGN,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMO,WAAW,GAAGD,OAAO,CAACC,WAA5B;AACA,MAAMC,GAAG,GAAGJ,OAAO,CAACC,GAAR,CAAYI,SAAxB;AAEAP,GAAG,CAACQ,GAAJ,CAAQC,iBAAQC,MAAR,CAAeC,cAAKC,OAAL,CAAaC,SAAb,EAAwB,kBAAxB,CAAf,CAAR;AAEAb,GAAG,CAACc,GAAJ,CAAQ,QAAR,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAa,OAAMH,GAAG,CAACI,MAAJ,CAAWC,WAAX,EAAyB,KAAIL,GAAG,CAACT,GAAI,EAAxD;AAEAD,EAAAA,WAAW,CAACgB,OAAZ,CAAoBf,GAApB,EAAyB;AAACgB,IAAAA,kBAAkB,EAAE;AAArB,GAAzB,EAAqD,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAClE,QAAID,GAAG,KAAK,IAAZ,EAAkB;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,YAAMO,EAAE,GAAGD,MAAM,CAACC,EAAP,CAAU,WAAV,CAAX;AACA,YAAMC,KAAK,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAd;AAEAD,MAAAA,KAAK,CAACE,IAAN,CAAW,EAAX,EAAeC,OAAf,CAAuB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACjCf,QAAAA,GAAG,CAACgB,IAAJ,CAAS;AACLD,UAAAA,KAAK,EAAEA;AADF,SAAT;AAGH,OAJD;AAKH;AACJ,GAbD;AAcH,CAjBD;AAmBA/B,GAAG,CAACc,GAAJ,CAAQ,YAAR,EAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAa,OAAMH,GAAG,CAACI,MAAJ,CAAWC,WAAX,EAAyB,KAAIL,GAAG,CAACT,GAAI,EAAxD;AACAD,EAAAA,WAAW,CAACgB,OAAZ,CAAoBf,GAApB,EAAyB;AAACgB,IAAAA,kBAAkB,EAAE;AAArB,GAAzB,EAAqD,CAACQ,CAAD,EAAIN,MAAJ,KAAe;AAChE,QAAIM,CAAC,KAAK,IAAV,EAAgB;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,YAAMO,EAAE,GAAGD,MAAM,CAACC,EAAP,CAAU,WAAV,CAAX;AACA,YAAMQ,SAAS,GAAGR,EAAE,CAACE,UAAH,CAAc,WAAd,CAAlB;AAEAM,MAAAA,SAAS,CAACL,IAAV,CAAe,EAAf,EAAmBC,OAAnB,CAA2B,CAACC,CAAD,EAAII,SAAJ,KAAkB;AACzClB,QAAAA,GAAG,CAACgB,IAAJ,CAAS;AACLE,UAAAA,SAAS,EAAEA;AADN,SAAT;AAGH,OAJD;AAKH;AACJ,GAbD;AAcH,CAhBD;AAkBAlC,GAAG,CAACmC,MAAJ,CAAWlC,QAAX,EAAqB,MACjBgB,OAAO,CAACC,GAAR,CAAY,qDAAZ,CADJ","sourcesContent":["/* becodeorg/trouvkach\n *\n * /src/server/index.js - Server entry point\n *\n * coded by yousef\n * started at 03/12/2019\n */\n\nrequire(\"dotenv\").config();\n\nimport express from \"express\";\nimport path from \"path\";\n\nconst app = express();\nconst {APP_PORT} = process.env;\n\nconst mongodb = require(\"mongodb\");\nconst MongoClient = mongodb.MongoClient;\nconst url = process.env.MONGO_URI;\n\napp.use(express.static(path.resolve(__dirname, \"../../bin/client\")));\n\napp.get(\"/banks\", (req, res) => {\n    console.log(`ℹ️ (${req.method.toUpperCase()}) ${req.url}`);\n\n    MongoClient.connect(url, {useUnifiedTopology: true}, (err, client) => {\n        if (err === null) {\n            console.log(\"Banks Connected\");\n\n            const db = client.db(\"trouvkash\");\n            const Banks = db.collection(\"banks\");\n\n            Banks.find({}).toArray((e, banks) => {\n                res.send({\n                    banks: banks,\n                });\n            });\n        }\n    });\n});\n\napp.get(\"/terminals\", (req, res) => {\n    console.log(`ℹ️ (${req.method.toUpperCase()}) ${req.url}`);\n    MongoClient.connect(url, {useUnifiedTopology: true}, (e, client) => {\n        if (e === null) {\n            console.log(\"Terminals Connected\");\n\n            const db = client.db(\"trouvkash\");\n            const Terminals = db.collection(\"terminals\");\n\n            Terminals.find({}).toArray((e, terminals) => {\n                res.send({\n                    terminals: terminals,\n                });\n            });\n        }\n    });\n});\n\napp.listen(APP_PORT, () =>\n    console.log(\"RocketIcon Server is listening on port ${APP_PORT}.\"),\n);"],"file":"index.js"}