{"version":3,"sources":["webpack:////home/maxime-cao/Bureau/Tout/becode_projects/react/trouvkach/node_modules/react-leaflet/es/Map.js"],"names":["OTHER_PROPS","normalizeCenter","pos","Array","isArray","lat","lon","lng","Map","_MapEvented","props","_this","call","this","center","undefined","zoom","leafletElement","getCenter","viewport","getZoom","onViewportChange","_updating","onViewportChanged","container","className","_proto","prototype","createLeafletElement","options","updateLeafletElement","fromProps","toProps","bounds","boundsOptions","boxZoom","doubleClickZoom","dragging","keyboard","maxBounds","scrollWheelZoom","tap","touchZoom","useFlyTo","c","z","flyTo","getZoomPanOptions","setView","shouldUpdateCenter","setZoom","shouldUpdateBounds","setMaxBounds","flyToBounds","getFitBoundsOptions","fitBounds","enable","disable","animate","duration","easeLinearity","noMoveStart","zoomPanOptions","componentDidMount","apply","concat","on","contextValue","layerContainer","map","forceUpdate","componentDidUpdate","prevProps","_ready","whenReady","componentWillUnmount","off","preferCanvas","_initEvents","_stop","remove","next","prev","equals","render","createElement","id","ref","bindContainer","style","value","children"],"mappings":"0FAAA,6HAaIA,EAAc,CAAC,WAAY,YAAa,KAAM,QAAS,WAAY,aAEnEC,EAAkB,SAAyBC,GAC7C,OAAOC,MAAMC,QAAQF,GAAO,CAACA,EAAI,GAAIA,EAAI,IAAM,CAACA,EAAIG,IAAKH,EAAII,IAAMJ,EAAII,IAAMJ,EAAIK,MAG/EC,EAEJ,SAAUC,GAGR,SAASD,EAAIE,GACX,IAAIC,EA2CJ,OAzCAA,EAAQF,EAAYG,KAAKC,KAAMH,IAAUG,KAEzC,YAAgB,YAAuBF,GAAQ,iBAAa,GAE5D,YAAgB,YAAuBA,GAAQ,oBAAgB,GAE/D,YAAgB,YAAuBA,GAAQ,iBAAa,GAE5D,YAAgB,YAAuBA,GAAQ,WAAY,CACzDG,YAAQC,EACRC,UAAMD,IAGR,YAAgB,YAAuBJ,GAAQ,UAAU,GAEzD,YAAgB,YAAuBA,GAAQ,aAAa,GAE5D,YAAgB,YAAuBA,GAAQ,mBAAoB,WACjE,IAAIG,EAASH,EAAMM,eAAeC,YAElCP,EAAMQ,SAAW,CACfL,OAAQA,EAAS,CAACA,EAAOT,IAAKS,EAAOP,UAAOQ,EAC5CC,KAAML,EAAMM,eAAeG,WAGzBT,EAAMD,MAAMW,mBAAqBV,EAAMW,WACzCX,EAAMD,MAAMW,iBAAiBV,EAAMQ,YAIvC,YAAgB,YAAuBR,GAAQ,oBAAqB,WAC9DA,EAAMD,MAAMa,oBAAsBZ,EAAMW,WAC1CX,EAAMD,MAAMa,kBAAkBZ,EAAMQ,YAIxC,YAAgB,YAAuBR,GAAQ,gBAAiB,SAAUa,GACxEb,EAAMa,UAAYA,IAGpBb,EAAMc,UAAYf,EAAMe,UACjBd,EA9CT,YAAeH,EAAKC,GAiDpB,IAAIiB,EAASlB,EAAImB,UAiOjB,OA/NAD,EAAOE,qBAAuB,SAA8BlB,GAC1D,IAAIS,EAAWT,EAAMS,SACjBU,EAAU,YAA8BnB,EAAO,CAAC,aAYpD,OAVIS,IACEA,EAASL,SACXe,EAAQf,OAASK,EAASL,QAGC,iBAAlBK,EAASH,OAClBa,EAAQb,KAAOG,EAASH,OAIrB,IAAI,MAAWH,KAAKW,UAAWK,IAGxCH,EAAOI,qBAAuB,SAA8BC,EAAWC,GACrEnB,KAAKS,WAAY,EACjB,IAAIW,EAASD,EAAQC,OACjBC,EAAgBF,EAAQE,cACxBC,EAAUH,EAAQG,QAClBrB,EAASkB,EAAQlB,OACjBW,EAAYO,EAAQP,UACpBW,EAAkBJ,EAAQI,gBAC1BC,EAAWL,EAAQK,SACnBC,EAAWN,EAAQM,SACnBC,EAAYP,EAAQO,UACpBC,EAAkBR,EAAQQ,gBAC1BC,EAAMT,EAAQS,IACdC,EAAYV,EAAQU,UACpBC,EAAWX,EAAQW,SACnBxB,EAAWa,EAAQb,SACnBH,EAAOgB,EAAQhB,KAGnB,GAFA,YAAgBH,KAAKW,UAAWO,EAAUN,UAAWA,GAEjDN,GAAYA,IAAaY,EAAUZ,SAAU,CAC/C,IAAIyB,EAAIzB,EAASL,OAASK,EAASL,OAASA,EACxC+B,EAAqB,MAAjB1B,EAASH,KAAeA,EAAOG,EAASH,MAE/B,IAAb2B,EACF9B,KAAKI,eAAe6B,MAAMF,EAAGC,EAAGhC,KAAKkC,kBAAkBf,IAEvDnB,KAAKI,eAAe+B,QAAQJ,EAAGC,EAAGhC,KAAKkC,kBAAkBf,SAElDlB,GAAUD,KAAKoC,mBAAmBnC,EAAQiB,EAAUjB,SAC5C,IAAb6B,EACF9B,KAAKI,eAAe6B,MAAMhC,EAAQE,EAAMH,KAAKkC,kBAAkBf,IAE/DnB,KAAKI,eAAe+B,QAAQlC,EAAQE,EAAMH,KAAKkC,kBAAkBf,IAE1C,iBAAThB,GAAqBA,IAASe,EAAUf,OAClC,MAAlBe,EAAUf,KACZH,KAAKI,eAAe+B,QAAQlC,EAAQE,EAAMH,KAAKkC,kBAAkBf,IAEjEnB,KAAKI,eAAeiC,QAAQlC,EAAMH,KAAKkC,kBAAkBf,KAIzDO,GAAa1B,KAAKsC,mBAAmBZ,EAAWR,EAAUQ,YAC5D1B,KAAKI,eAAemC,aAAab,GAG/BN,IAAWpB,KAAKsC,mBAAmBlB,EAAQF,EAAUE,SAAWC,IAAkBH,EAAUG,kBAC7E,IAAbS,EACF9B,KAAKI,eAAeoC,YAAYpB,EAAQpB,KAAKyC,oBAAoBtB,IAEjEnB,KAAKI,eAAesC,UAAUtB,EAAQpB,KAAKyC,oBAAoBtB,KAI/DG,IAAYJ,EAAUI,WACR,IAAZA,EACFtB,KAAKI,eAAekB,QAAQqB,SAE5B3C,KAAKI,eAAekB,QAAQsB,WAI5BrB,IAAoBL,EAAUK,mBACR,IAApBA,GAAuD,iBAApBA,GACrCvB,KAAKI,eAAeY,QAAQO,gBAAkBA,EAC9CvB,KAAKI,eAAemB,gBAAgBoB,UAEpC3C,KAAKI,eAAemB,gBAAgBqB,WAIpCpB,IAAaN,EAAUM,YACR,IAAbA,EACFxB,KAAKI,eAAeoB,SAASmB,SAE7B3C,KAAKI,eAAeoB,SAASoB,WAI7BnB,IAAaP,EAAUO,YACR,IAAbA,EACFzB,KAAKI,eAAeqB,SAASkB,SAE7B3C,KAAKI,eAAeqB,SAASmB,WAI7BjB,IAAoBT,EAAUS,mBACR,IAApBA,GAAuD,iBAApBA,GACrC3B,KAAKI,eAAeY,QAAQW,gBAAkBA,EAC9C3B,KAAKI,eAAeuB,gBAAgBgB,UAEpC3C,KAAKI,eAAeuB,gBAAgBiB,WAIpChB,IAAQV,EAAUU,OACR,IAARA,EACF5B,KAAKI,eAAewB,IAAIe,SAExB3C,KAAKI,eAAewB,IAAIgB,WAIxBf,IAAcX,EAAUW,aACR,IAAdA,GAA2C,iBAAdA,GAC/B7B,KAAKI,eAAeY,QAAQa,UAAYA,EACxC7B,KAAKI,eAAeyB,UAAUc,UAE9B3C,KAAKI,eAAeyB,UAAUe,WAIlC5C,KAAKS,WAAY,GAGnBI,EAAOqB,kBAAoB,SAA2BrC,GAKpD,MAAO,CACLgD,QALYhD,EAAMgD,QAMlBC,SALajD,EAAMiD,SAMnBC,cALkBlD,EAAMkD,cAMxBC,YALgBnD,EAAMmD,cAS1BnC,EAAO4B,oBAAsB,SAA6B5C,GACxD,IAAIoD,EAAiBjD,KAAKkC,kBAAkBrC,GAC5C,OAAO,YAAS,GAAIoD,EAAgB,GAAIpD,EAAMwB,gBAGhDR,EAAOqC,kBAAoB,WACzB,IAAIrD,EAAQ,IAAKsD,WAAM,EAAQ,CAACnD,KAAKH,OAAOuD,OAAOjE,IACnDa,KAAKI,eAAiBJ,KAAKe,qBAAqBlB,GAChDG,KAAKI,eAAeiD,GAAG,OAAQrD,KAAKQ,kBACpCR,KAAKI,eAAeiD,GAAG,UAAWrD,KAAKU,mBAEnB,MAAhBb,EAAMuB,QACRpB,KAAKI,eAAesC,UAAU7C,EAAMuB,OAAQpB,KAAKyC,oBAAoB5C,IAGvEG,KAAKsD,aAAe,CAClBC,eAAgBvD,KAAKI,eACrBoD,IAAKxD,KAAKI,gBAGZR,EAAYkB,UAAUoC,kBAAkBnD,KAAKC,MAE7CA,KAAKyD,eAGP5C,EAAO6C,mBAAqB,SAA4BC,IAClC,IAAhB3D,KAAK4D,SACP5D,KAAK4D,QAAS,EAEV5D,KAAKH,MAAMgE,WACb7D,KAAKI,eAAeyD,UAAU7D,KAAKH,MAAMgE,YAI7CjE,EAAYkB,UAAU4C,mBAAmB3D,KAAKC,KAAM2D,GAEpD3D,KAAKiB,qBAAqB0C,EAAW3D,KAAKH,QAG5CgB,EAAOiD,qBAAuB,WAC5BlE,EAAYkB,UAAUgD,qBAAqB/D,KAAKC,MAEhDA,KAAKI,eAAe2D,IAAI,OAAQ/D,KAAKQ,kBACrCR,KAAKI,eAAe2D,IAAI,UAAW/D,KAAKU,oBAGR,IAA5BV,KAAKH,MAAMmE,cACbhE,KAAKI,eAAe6D,aAAY,GAEhCjE,KAAKI,eAAe8D,SAEpBlE,KAAKI,eAAe+D,UAIxBtD,EAAOuB,mBAAqB,SAA4BgC,EAAMC,GAC5D,OAAKA,IACLD,EAAOhF,EAAgBgF,GACvBC,EAAOjF,EAAgBiF,GAChBD,EAAK,KAAOC,EAAK,IAAMD,EAAK,KAAOC,EAAK,KAGjDxD,EAAOyB,mBAAqB,SAA4B8B,EAAMC,GAC5D,OAAOA,IAAQ,uBAAaD,GAAME,OAAO,uBAAaD,KAGxDxD,EAAO0D,OAAS,WACd,OAAO,IAAMC,cAAc,MAAO,CAChC5D,UAAWZ,KAAKY,UAChB6D,GAAIzE,KAAKH,MAAM4E,GACfC,IAAK1E,KAAK2E,cACVC,MAAO5E,KAAKH,MAAM+E,OACjB5E,KAAKsD,aAAe,IAAMkB,cAAc,IAAiB,CAC1DK,MAAO7E,KAAKsD,cACXtD,KAAKH,MAAMiF,UAAY,OAGrBnF,EAnRT,CAoRE","file":"js/2eefc5b2ef837ddad94e.js","sourcesContent":["\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { latLngBounds, Map as LeafletMap } from 'leaflet';\nimport React from 'react';\nimport { LeafletProvider } from './context';\nimport MapEvented from './MapEvented';\nimport updateClassName from './utils/updateClassName';\nimport omit from './utils/omit';\nvar OTHER_PROPS = ['children', 'className', 'id', 'style', 'useFlyTo', 'whenReady'];\n\nvar normalizeCenter = function normalizeCenter(pos) {\n  return Array.isArray(pos) ? [pos[0], pos[1]] : [pos.lat, pos.lon ? pos.lon : pos.lng];\n};\n\nvar Map =\n/*#__PURE__*/\nfunction (_MapEvented) {\n  _inheritsLoose(Map, _MapEvented);\n\n  function Map(props) {\n    var _this;\n\n    _this = _MapEvented.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"contextValue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", {\n      center: undefined,\n      zoom: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_ready\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_updating\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewportChange\", function () {\n      var center = _this.leafletElement.getCenter();\n\n      _this.viewport = {\n        center: center ? [center.lat, center.lng] : undefined,\n        zoom: _this.leafletElement.getZoom()\n      };\n\n      if (_this.props.onViewportChange && !_this._updating) {\n        _this.props.onViewportChange(_this.viewport);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewportChanged\", function () {\n      if (_this.props.onViewportChanged && !_this._updating) {\n        _this.props.onViewportChanged(_this.viewport);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindContainer\", function (container) {\n      _this.container = container;\n    });\n\n    _this.className = props.className;\n    return _this;\n  }\n\n  var _proto = Map.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var viewport = props.viewport,\n        options = _objectWithoutPropertiesLoose(props, [\"viewport\"]);\n\n    if (viewport) {\n      if (viewport.center) {\n        options.center = viewport.center;\n      }\n\n      if (typeof viewport.zoom === 'number') {\n        options.zoom = viewport.zoom;\n      }\n    }\n\n    return new LeafletMap(this.container, options);\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    this._updating = true;\n    var bounds = toProps.bounds,\n        boundsOptions = toProps.boundsOptions,\n        boxZoom = toProps.boxZoom,\n        center = toProps.center,\n        className = toProps.className,\n        doubleClickZoom = toProps.doubleClickZoom,\n        dragging = toProps.dragging,\n        keyboard = toProps.keyboard,\n        maxBounds = toProps.maxBounds,\n        scrollWheelZoom = toProps.scrollWheelZoom,\n        tap = toProps.tap,\n        touchZoom = toProps.touchZoom,\n        useFlyTo = toProps.useFlyTo,\n        viewport = toProps.viewport,\n        zoom = toProps.zoom;\n    updateClassName(this.container, fromProps.className, className);\n\n    if (viewport && viewport !== fromProps.viewport) {\n      var c = viewport.center ? viewport.center : center;\n      var z = viewport.zoom == null ? zoom : viewport.zoom;\n\n      if (useFlyTo === true) {\n        this.leafletElement.flyTo(c, z, this.getZoomPanOptions(toProps));\n      } else {\n        this.leafletElement.setView(c, z, this.getZoomPanOptions(toProps));\n      }\n    } else if (center && this.shouldUpdateCenter(center, fromProps.center)) {\n      if (useFlyTo === true) {\n        this.leafletElement.flyTo(center, zoom, this.getZoomPanOptions(toProps));\n      } else {\n        this.leafletElement.setView(center, zoom, this.getZoomPanOptions(toProps));\n      }\n    } else if (typeof zoom === 'number' && zoom !== fromProps.zoom) {\n      if (fromProps.zoom == null) {\n        this.leafletElement.setView(center, zoom, this.getZoomPanOptions(toProps));\n      } else {\n        this.leafletElement.setZoom(zoom, this.getZoomPanOptions(toProps));\n      }\n    }\n\n    if (maxBounds && this.shouldUpdateBounds(maxBounds, fromProps.maxBounds)) {\n      this.leafletElement.setMaxBounds(maxBounds);\n    }\n\n    if (bounds && (this.shouldUpdateBounds(bounds, fromProps.bounds) || boundsOptions !== fromProps.boundsOptions)) {\n      if (useFlyTo === true) {\n        this.leafletElement.flyToBounds(bounds, this.getFitBoundsOptions(toProps));\n      } else {\n        this.leafletElement.fitBounds(bounds, this.getFitBoundsOptions(toProps));\n      }\n    }\n\n    if (boxZoom !== fromProps.boxZoom) {\n      if (boxZoom === true) {\n        this.leafletElement.boxZoom.enable();\n      } else {\n        this.leafletElement.boxZoom.disable();\n      }\n    }\n\n    if (doubleClickZoom !== fromProps.doubleClickZoom) {\n      if (doubleClickZoom === true || typeof doubleClickZoom === 'string') {\n        this.leafletElement.options.doubleClickZoom = doubleClickZoom;\n        this.leafletElement.doubleClickZoom.enable();\n      } else {\n        this.leafletElement.doubleClickZoom.disable();\n      }\n    }\n\n    if (dragging !== fromProps.dragging) {\n      if (dragging === true) {\n        this.leafletElement.dragging.enable();\n      } else {\n        this.leafletElement.dragging.disable();\n      }\n    }\n\n    if (keyboard !== fromProps.keyboard) {\n      if (keyboard === true) {\n        this.leafletElement.keyboard.enable();\n      } else {\n        this.leafletElement.keyboard.disable();\n      }\n    }\n\n    if (scrollWheelZoom !== fromProps.scrollWheelZoom) {\n      if (scrollWheelZoom === true || typeof scrollWheelZoom === 'string') {\n        this.leafletElement.options.scrollWheelZoom = scrollWheelZoom;\n        this.leafletElement.scrollWheelZoom.enable();\n      } else {\n        this.leafletElement.scrollWheelZoom.disable();\n      }\n    }\n\n    if (tap !== fromProps.tap) {\n      if (tap === true) {\n        this.leafletElement.tap.enable();\n      } else {\n        this.leafletElement.tap.disable();\n      }\n    }\n\n    if (touchZoom !== fromProps.touchZoom) {\n      if (touchZoom === true || typeof touchZoom === 'string') {\n        this.leafletElement.options.touchZoom = touchZoom;\n        this.leafletElement.touchZoom.enable();\n      } else {\n        this.leafletElement.touchZoom.disable();\n      }\n    }\n\n    this._updating = false;\n  };\n\n  _proto.getZoomPanOptions = function getZoomPanOptions(props) {\n    var animate = props.animate,\n        duration = props.duration,\n        easeLinearity = props.easeLinearity,\n        noMoveStart = props.noMoveStart;\n    return {\n      animate: animate,\n      duration: duration,\n      easeLinearity: easeLinearity,\n      noMoveStart: noMoveStart\n    };\n  };\n\n  _proto.getFitBoundsOptions = function getFitBoundsOptions(props) {\n    var zoomPanOptions = this.getZoomPanOptions(props);\n    return _extends({}, zoomPanOptions, {}, props.boundsOptions);\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var props = omit.apply(void 0, [this.props].concat(OTHER_PROPS));\n    this.leafletElement = this.createLeafletElement(props);\n    this.leafletElement.on('move', this.onViewportChange);\n    this.leafletElement.on('moveend', this.onViewportChanged);\n\n    if (props.bounds != null) {\n      this.leafletElement.fitBounds(props.bounds, this.getFitBoundsOptions(props));\n    }\n\n    this.contextValue = {\n      layerContainer: this.leafletElement,\n      map: this.leafletElement\n    };\n\n    _MapEvented.prototype.componentDidMount.call(this);\n\n    this.forceUpdate(); // Re-render now that leafletElement is created\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this._ready === false) {\n      this._ready = true;\n\n      if (this.props.whenReady) {\n        this.leafletElement.whenReady(this.props.whenReady);\n      }\n    }\n\n    _MapEvented.prototype.componentDidUpdate.call(this, prevProps);\n\n    this.updateLeafletElement(prevProps, this.props);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    _MapEvented.prototype.componentWillUnmount.call(this);\n\n    this.leafletElement.off('move', this.onViewportChange);\n    this.leafletElement.off('moveend', this.onViewportChanged); // The canvas renderer uses requestAnimationFrame, making a deferred call to a deleted object\n    // When preferCanvas is set, use simpler teardown logic\n\n    if (this.props.preferCanvas === true) {\n      this.leafletElement._initEvents(true);\n\n      this.leafletElement._stop();\n    } else {\n      this.leafletElement.remove();\n    }\n  };\n\n  _proto.shouldUpdateCenter = function shouldUpdateCenter(next, prev) {\n    if (!prev) return true;\n    next = normalizeCenter(next);\n    prev = normalizeCenter(prev);\n    return next[0] !== prev[0] || next[1] !== prev[1];\n  };\n\n  _proto.shouldUpdateBounds = function shouldUpdateBounds(next, prev) {\n    return prev ? !latLngBounds(next).equals(latLngBounds(prev)) : true;\n  };\n\n  _proto.render = function render() {\n    return React.createElement(\"div\", {\n      className: this.className,\n      id: this.props.id,\n      ref: this.bindContainer,\n      style: this.props.style\n    }, this.contextValue ? React.createElement(LeafletProvider, {\n      value: this.contextValue\n    }, this.props.children) : null);\n  };\n\n  return Map;\n}(MapEvented);\n\nexport { Map as default };"],"sourceRoot":""}